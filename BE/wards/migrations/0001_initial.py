# Generated by Django 3.2.16 on 2022-10-27 17:27

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=17)),
                ('image', models.ImageField(default='default.jpg', upload_to='doctor')),
                ('phonenumber', models.CharField(max_length=11)),
                ('email', models.EmailField(max_length=191)),
                ('department', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'doctor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=191)),
                ('hospitalized_date', models.DateTimeField()),
                ('discharged_date', models.DateTimeField(null=True)),
                ('birth', models.DateTimeField()),
                ('sex', models.CharField(default='M', max_length=1)),
                ('nok_name', models.CharField(max_length=17)),
                ('nok_phonenumber', models.CharField(max_length=11)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wards.doctor')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'patient',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ward',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PatientStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.IntegerField()),
                ('bpm', models.IntegerField()),
                ('oxygen_saturation', models.IntegerField()),
                ('slope', models.IntegerField()),
                ('now', models.DateTimeField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wards.patient')),
            ],
            options={
                'db_table': 'patient_status',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='patient',
            name='ward',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wards.ward'),
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=17)),
                ('image', models.ImageField(default='default.jpg', upload_to='nurse')),
                ('phonenumber', models.CharField(max_length=11)),
                ('email', models.EmailField(max_length=191)),
                ('position', models.CharField(max_length=20)),
                ('ward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wards.ward')),
            ],
            options={
                'db_table': 'nurse',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=191)),
                ('status', models.CharField(max_length=191)),
                ('status_detail', models.CharField(max_length=191)),
                ('is_well', models.BooleanField(default=False)),
                ('is_read', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wards.patient')),
                ('ward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wards.ward')),
            ],
            options={
                'db_table': 'alert',
                'managed': True,
            },
        ),
    ]
